package com.spike.dynamoDB.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import lombok.Data;
import org.springframework.data.annotation.Id;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

@Data
@DynamoDBTable(tableName = "Notification")
public class Notification implements Serializable {

//    @DynamoDBAutoGeneratedKey
//    @DynamoDBGeneratedUuid( DynamoDBAutoGenerateStrategy.CREATE )
//    @DynamoDBAttribute
//    private String Id = UUID.randomUUID().toString();

//    @Id
//    private NotificationId notificationId;

//    @Id
    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    @DynamoDBAttribute(attributeName = "Id")
    private String id;

//    @DynamoDBRangeKey
    @DynamoDBAttribute(attributeName = "Cuit")
    private Long cuit;

    @DynamoDBIndexRangeKey(localSecondaryIndexName = "NotificationType-index", attributeName = "NotificationType")
    private String notificationType;

    @DynamoDBIndexRangeKey(localSecondaryIndexName = "UserId-index", attributeName = "UserId")
    private Long userId;

    @DynamoDBAttribute(attributeName = "Link")
    private String link;

    @DynamoDBAttribute(attributeName = "LinkExpirationDate")
    @DynamoDBTypeConverted( converter = LocalDateTimeConverter.class )
    private LocalDateTime linkExpirationDate;

    @DynamoDBAttribute(attributeName = "Read")
    private Boolean read;

//    private LocalDateTime createdAt;
//    private LocalDateTime updatedAt;
//    private LocalDateTime deletedAt;
//    private String title;
//    private String body;
//    private String urlText;
//    private String from;
//    private String user;

    static public class LocalDateTimeConverter implements DynamoDBTypeConverter<String, LocalDateTime> {

        @Override
        public String convert( final LocalDateTime time ) {
            return time.toString();
        }

        @Override
        public LocalDateTime unconvert( final String stringValue ) {
            return LocalDateTime.parse(stringValue);
        }
    }
}
